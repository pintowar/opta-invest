plugins {
    id "com.palantir.docker" version "0.22.0"
    id "com.palantir.docker-run" version "0.22.0"
}

version '0.6.7-SNAPSHOT'
group 'com.github.pintowar'

ext {
    vLombokVersion = '1.18.4'
    vOptaPlanner = '7.41.0.Final'
    vReactor = '3.3.8.RELEASE'
}

subprojects {
    version project.version
    group project.group

    apply plugin: 'idea'

    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        mavenCentral()
    }
}

ext {
    jarFileName = 'app.jar'
}

task copyClientResources(dependsOn: ':web-client:build') {
    group = 'build'
    description = 'Copy client resources into server'
    doLast {
        copy {
            from project(':web-client').buildDir.absolutePath
            into "${project(':web-server-boot').buildDir}/resources/main/public"
        }
    }
}

task assembleServerAndClient(dependsOn: ['copyClientResources', ':web-server-boot:assemble']) {
    group = 'build'
    description = 'Build combined server & client JAR'

    doLast {
        copy {
            from fileTree(dir: "${project(':web-server-boot').buildDir}/libs/")
            into "$rootDir/build/"
            logger.quiet "JAR generated at $rootDir/build/. It combines the server and client projects."
        }
    }
}

task clean(type: Delete) {
    group = 'build'
    description = 'Clean the client bundle'
    delete 'build'
}

tasks.getByPath(":web-server-boot:assemble").mustRunAfter(copyClientResources)

docker {
    name "pintowar/${project.name}:$version"
    tag 'current', "pintowar/${project.name}:$version"
    tag 'latest', "pintowar/${project.name}:latest"
    dependsOn tasks.assembleServerAndClient
    files "$rootDir/build/$jarFileName"
}

dockerRun {
    name 'opta_invest'
    image "pintowar/${project.name}:$version"
    ports '8080'
    clean true
    daemonize true
}
