{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/thread-loader/dist/cjs.js!/home/thiago/Projects/code/opta-invest/client/node_modules/babel-loader/lib/index.js!/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue","mtime":1597281106684},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1589656986742},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/thread-loader/dist/cjs.js","mtime":1589656986772},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/babel-loader/lib/index.js","mtime":1589656986733},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1589656986742},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597019925514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYXNzZXRzJywKICBwcm9wczogWyd0aXRsZScsICdwb3J0Zm9saW8nLCAnc3RhdHVzJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpZWxkczogWydpZCcsICduYW1lJywgJ3F1YW50aXR5J10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc29sdmluZzogZnVuY3Rpb24gc29sdmluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RhdHVzID09PSAnU09MVklOR19BQ1RJVkUnOwogICAgfSwKICAgIHJlZ2lvbnM6IGZ1bmN0aW9uIHJlZ2lvbnMoKSB7CiAgICAgIHJldHVybiAodGhpcy5wb3J0Zm9saW8gPyB0aGlzLnBvcnRmb2xpby5yZWdpb25MaXN0IHx8IFtdIDogW10pLm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgIGUucXVhbnRpdHkgPSBlLnF1YW50aXR5TWlsbGlzTWF4aW11bSAvIDEwOwogICAgICAgIHJldHVybiBlOwogICAgICB9KTsKICAgIH0sCiAgICBzZWN0b3JzOiBmdW5jdGlvbiBzZWN0b3JzKCkgewogICAgICByZXR1cm4gKHRoaXMucG9ydGZvbGlvID8gdGhpcy5wb3J0Zm9saW8uc2VjdG9yTGlzdCB8fCBbXSA6IFtdKS5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICBlLnF1YW50aXR5ID0gZS5xdWFudGl0eU1pbGxpc01heGltdW0gLyAxMDsKICAgICAgICByZXR1cm4gZTsKICAgICAgfSk7CiAgICB9LAogICAgYXNzZXRzOiBmdW5jdGlvbiBhc3NldHMoKSB7CiAgICAgIHZhciByZWdpb25zSWQgPSB0aGlzLnJlZ2lvbnMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGUpIHsKICAgICAgICBhY2NbZS5pZF0gPSBlOwogICAgICAgIHJldHVybiBhY2M7CiAgICAgIH0sIHt9KTsKICAgICAgdmFyIHNlY3RvcnNJZCA9IHRoaXMuc2VjdG9ycy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgZSkgewogICAgICAgIGFjY1tlLmlkXSA9IGU7CiAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgfSwge30pOwogICAgICB2YXIgYXNzZXRzTGlzdCA9IHRoaXMucG9ydGZvbGlvID8gdGhpcy5wb3J0Zm9saW8uYXNzZXRDbGFzc0xpc3QgfHwgW10gOiBbXTsKICAgICAgcmV0dXJuIGFzc2V0c0xpc3QubWFwKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlkOiBlLmlkLAogICAgICAgICAgbmFtZTogZS5uYW1lLAogICAgICAgICAgcmVnaW9uOiByZWdpb25zSWRbZS5yZWdpb25JZF0ubmFtZSwKICAgICAgICAgIHNlY3Rvcjogc2VjdG9yc0lkW2Uuc2VjdG9ySWRdLm5hbWUsCiAgICAgICAgICBleHBlY3RlZFJldHVybkxhYmVsOiBlLmV4cGVjdGVkUmV0dXJuTGFiZWwsCiAgICAgICAgICBzdGFuZGFyZERldmlhdGlvblJpc2tMYWJlbDogZS5zdGFuZGFyZERldmlhdGlvblJpc2tMYWJlbAogICAgICAgIH07CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVnaW9uQ2hhbmdlOiBmdW5jdGlvbiByZWdpb25DaGFuZ2UoaWR4KSB7CiAgICAgIHZhciBhdXggPSBwYXJzZUZsb2F0KHRoaXMucmVnaW9uc1tpZHhdLnF1YW50aXR5KTsKICAgICAgdmFyIHF0eSA9IE1hdGgubWF4KE1hdGgubWluKGlzTmFOKGF1eCkgPyAwLjAgOiBhdXgsIDEwMC4wKSwgMC4wKTsKICAgICAgdGhpcy5wb3J0Zm9saW8ucmVnaW9uTGlzdFtpZHhdLnF1YW50aXR5TWlsbGlzTWF4aW11bSA9IHF0eSAqIDEwOwogICAgICB0aGlzLnBvcnRmb2xpby5yZWdpb25MaXN0W2lkeF0ucXVhbnRpdHlNYXhpbXVtTGFiZWwgPSAiIi5jb25jYXQocXR5LCAiJSIpOwogICAgfSwKICAgIHNlY3RvckNoYW5nZTogZnVuY3Rpb24gc2VjdG9yQ2hhbmdlKGlkeCkgewogICAgICB2YXIgYXV4ID0gcGFyc2VGbG9hdCh0aGlzLnNlY3RvcnNbaWR4XS5xdWFudGl0eSk7CiAgICAgIHZhciBxdHkgPSBNYXRoLm1heChNYXRoLm1pbihpc05hTihhdXgpID8gMC4wIDogYXV4LCAxMDAuMCksIDAuMCk7CiAgICAgIHRoaXMucG9ydGZvbGlvLnNlY3Rvckxpc3RbaWR4XS5xdWFudGl0eU1pbGxpc01heGltdW0gPSBxdHkgKiAxMDsKICAgICAgdGhpcy5wb3J0Zm9saW8uc2VjdG9yTGlzdFtpZHhdLnF1YW50aXR5TWF4aW11bUxhYmVsID0gIiIuY29uY2F0KHF0eSwgIiUiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["assets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,QAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,KAAA,gBAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,CAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AAAA,QAAA,CAAA,CAAA,QAAA,GAAA,CAAA,CAAA,qBAAA,GAAA,EAAA;AAAA,eAAA,CAAA;AAAA,OAAA,CAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,aAAA,CAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AAAA,QAAA,CAAA,CAAA,QAAA,GAAA,CAAA,CAAA,qBAAA,GAAA,EAAA;AAAA,eAAA,CAAA;AAAA,OAAA,CAAA;AACA,KATA;AAUA,IAAA,MAVA,oBAUA;AACA,UAAA,SAAA,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AAAA,QAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA;AAAA,eAAA,GAAA;AAAA,OAAA,EAAA,EAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AAAA,QAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA;AAAA,eAAA,GAAA;AAAA,OAAA,EAAA,EAAA,CAAA;AAEA,UAAA,UAAA,GAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,cAAA,IAAA,EAAA,GAAA,EAAA;AACA,aAAA,UAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA;AACA,UAAA,EAAA,EAAA,CAAA,CAAA,EADA;AAEA,UAAA,IAAA,EAAA,CAAA,CAAA,IAFA;AAGA,UAAA,MAAA,EAAA,SAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,IAHA;AAIA,UAAA,MAAA,EAAA,SAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,IAJA;AAKA,UAAA,mBAAA,EAAA,CAAA,CAAA,mBALA;AAMA,UAAA,0BAAA,EAAA,CAAA,CAAA;AANA,SAAA;AAAA,OAAA,CAAA;AAOA;AAtBA,GARA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,GADA,EACA;AACA,UAAA,GAAA,GAAA,UAAA,CAAA,KAAA,OAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,GAAA,EAAA,qBAAA,GAAA,GAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,GAAA,EAAA,oBAAA,aAAA,GAAA;AACA,KANA;AAOA,IAAA,YAPA,wBAOA,GAPA,EAOA;AACA,UAAA,GAAA,GAAA,UAAA,CAAA,KAAA,OAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,GAAA,GAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,GAAA,EAAA,qBAAA,GAAA,GAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,GAAA,EAAA,oBAAA,aAAA,GAAA;AACA;AAZA;AAhCA,CAAA","sourcesContent":["<template>\n  <div id=\"assets\">\n    <b-row>\n      <h1>{{ title }}</h1>\n    </b-row>\n    <b-row>\n      <b-col cols=\"6\">\n        <b-table striped hover :items=\"regions\" :fields=\"fields\">\n          <template slot=\"quantity\" slot-scope=\"row\">\n            <b-input-group size=\"sm\" append=\"%\">\n              <b-form-input id=\"region-std\" v-model.number=\"row.item.quantity\" type=\"number\" @change=\"regionChange(row.index)\" :disabled=\"solving\"/>\n            </b-input-group>\n          </template>\n        </b-table>\n      </b-col>\n      <b-col cols=\"6\">\n        <b-table striped hover :items=\"sectors\" :fields=\"fields\">\n          <template slot=\"quantity\" slot-scope=\"row\">\n            <b-input-group size=\"sm\" append=\"%\">\n              <b-form-input id=\"sector-std\" v-model.trim=\"row.item.quantity\" type=\"number\" @change=\"sectorChange(row.index)\" :disabled=\"solving\"/>\n            </b-input-group>\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-table striped hover :items=\"assets\"></b-table>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'assets',\n  props: ['title', 'portfolio', 'status'],\n  data () {\n    return {\n      fields: ['id', 'name', 'quantity']\n    }\n  },\n  computed: {\n    solving () {\n      return this.status === 'SOLVING_ACTIVE'\n    },\n    regions () {\n      return (this.portfolio ? this.portfolio.regionList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    sectors () {\n      return (this.portfolio ? this.portfolio.sectorList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    assets () {\n      const regionsId = this.regions.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n      const sectorsId = this.sectors.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n\n      const assetsList = this.portfolio ? this.portfolio.assetClassList || [] : []\n      return assetsList.map(e => ({\n        id: e.id,\n        name: e.name,\n        region: regionsId[e.regionId].name,\n        sector: sectorsId[e.sectorId].name,\n        expectedReturnLabel: e.expectedReturnLabel,\n        standardDeviationRiskLabel: e.standardDeviationRiskLabel}))\n    }\n  },\n  methods: {\n    regionChange (idx) {\n      const aux = parseFloat(this.regions[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.regionList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.regionList[idx].quantityMaximumLabel = `${qty}%`\n    },\n    sectorChange (idx) {\n      const aux = parseFloat(this.sectors[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.sectorList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.sectorList[idx].quantityMaximumLabel = `${qty}%`\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/portfolio"}]}