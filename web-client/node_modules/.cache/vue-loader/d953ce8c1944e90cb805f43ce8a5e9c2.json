{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/allocation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/allocation.vue","mtime":1597281106684},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/babel-loader/lib/index.js","mtime":1589656986733},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1589656986742},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597019925514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSYWluYm93IGZyb20gJ2NvbG9yLXJhaW5ib3cnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IEFsbG9jYXRpb25DaGFydCBmcm9tICdAL2NvbXBvbmVudHMvcG9ydGZvbGlvL2NoYXJ0LnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYWxsb2NhdGlvbicsCiAgcHJvcHM6IFsndGl0bGUnLCAncG9ydGZvbGlvJywgJ3N0YXR1cyddLAogIGNvbXBvbmVudHM6IHsKICAgICdhbGxvY2F0aW9uLWNoYXJ0JzogQWxsb2NhdGlvbkNoYXJ0CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlRmllbGRzOiBbJ2Fzc2V0JywgJ2V4cGVjdGVkUmV0dXJuJywgJ3N0YW5kYXJkRGV2aWF0aW9uJywgJ3F1YW50aXR5TGFiZWwnXQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNvbHZpbmcgKCkgewogICAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09ICdTT0xWSU5HX0FDVElWRScKICAgIH0sCiAgICBwYXJhbWV0cml6YXRpb246IHsKICAgICAgc2V0IChuZXdWYWwpIHsKICAgICAgICB0aGlzLnBvcnRmb2xpby5wYXJhbWV0cml6YXRpb24uc3RhbmRhcmREZXZpYXRpb25NYXhpbXVtTGFiZWwgPSBgJHtuZXdWYWx9JWAKICAgICAgICB0aGlzLnBvcnRmb2xpby5wYXJhbWV0cml6YXRpb24uc3RhbmRhcmREZXZpYXRpb25NaWxsaXNNYXhpbXVtID0gbmV3VmFsICogMTAKICAgICAgfSwKICAgICAgZ2V0ICgpIHsKICAgICAgICByZXR1cm4gKCgodGhpcy5wb3J0Zm9saW8gfHwge30pLnBhcmFtZXRyaXphdGlvbiB8fCB7fSkuc3RhbmRhcmREZXZpYXRpb25NaWxsaXNNYXhpbXVtIHx8IDApIC8gMTAKICAgICAgfQogICAgfSwKICAgIGFsbG9jYXRpb25zICgpIHsKICAgICAgY29uc3QgYXNzZXRzTGlzdCA9IHRoaXMucG9ydGZvbGlvID8gdGhpcy5wb3J0Zm9saW8uYXNzZXRDbGFzc0xpc3QgOiBbXQogICAgICBjb25zdCBhc3NldHNJZCA9IChhc3NldHNMaXN0IHx8IFtdKS5yZWR1Y2UoKGFjYywgZSkgPT4geyBhY2NbZS5pZF0gPSBlOyByZXR1cm4gYWNjIH0sIHt9KQoKICAgICAgcmV0dXJuICh0aGlzLnBvcnRmb2xpby5hc3NldENsYXNzQWxsb2NhdGlvbkxpc3QgfHwgW10pLm1hcChlID0+ICh7CiAgICAgICAgYXNzZXQ6IGFzc2V0c0lkW2UuYXNzZXRDbGFzc0lkXS5uYW1lLAogICAgICAgIGV4cGVjdGVkUmV0dXJuOiBhc3NldHNJZFtlLmFzc2V0Q2xhc3NJZF0uZXhwZWN0ZWRSZXR1cm5MYWJlbCwKICAgICAgICBzdGFuZGFyZERldmlhdGlvbjogYXNzZXRzSWRbZS5hc3NldENsYXNzSWRdLnN0YW5kYXJkRGV2aWF0aW9uUmlza0xhYmVsLAogICAgICAgIHF1YW50aXR5TWlsbGlzOiBlLnF1YW50aXR5TWlsbGlzLAogICAgICAgIHF1YW50aXR5TGFiZWw6IGUucXVhbnRpdHlMYWJlbH0pKQogICAgfSwKICAgIGNoYXJ0QWxsb2NhdGlvbnMgKCkgewogICAgICBjb25zdCBjb2xvcnMgPSBSYWluYm93LmNyZWF0ZSh0aGlzLmFsbG9jYXRpb25zLmxlbmd0aCkubWFwKGMgPT4gYHJnYigke2MudmFsdWVzLnJnYi5qb2luKCcsICcpfSlgKQogICAgICByZXR1cm4gewogICAgICAgIGxhYmVsczogdGhpcy5hbGxvY2F0aW9ucy5tYXAoZSA9PiBlLmFzc2V0KSwKICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLAogICAgICAgICAgZGF0YTogdGhpcy5hbGxvY2F0aW9ucy5tYXAoZSA9PiBlLnF1YW50aXR5TWlsbGlzKQogICAgICAgIH1dCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHBhcmFtZXRyaXphdGlvbkNoYW5nZSAoKSB7CiAgICAgIGNvbnN0IGF1eCA9IHBhcnNlRmxvYXQodGhpcy5wYXJhbWV0cml6YXRpb24pCiAgICAgIGNvbnN0IHF0eSA9IE1hdGgubWF4KE1hdGgubWluKGlzTmFOKGF1eCkgPyAwLjAgOiBhdXgsIDEwMC4wKSwgMC4wKQogICAgICB0aGlzLnBhcmFtZXRyaXphdGlvbiA9IHF0eQogICAgfSwKICAgIGFsbG9jYXRlQXNzZXRzICgpIHsKICAgICAgY29uc3QgdXJsID0gYC9hcGkvcG9ydGZvbGlvLyR7dGhpcy5wb3J0Zm9saW8uaWR9L2FzeW5jLWFsbG9jYXRlYAogICAgICBheGlvcy5wb3N0KHVybCwgdGhpcy5wb3J0Zm9saW8pCiAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy4kZW1pdCgnbmV3U3RhdHVzJywgcmVzLmRhdGEpCiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpCiAgICAgIH0sIGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICB9KQogICAgfSwKICAgIHRlcm1pbmF0ZUFsbG9jYXRpb24gKCkgewogICAgICBjb25zdCB1cmwgPSBgL2FwaS9wb3J0Zm9saW8vJHt0aGlzLnBvcnRmb2xpby5pZH0vdGVybWluYXRlYAogICAgICBheGlvcy5nZXQodXJsKQogICAgICAudGhlbihyZXMgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKQogICAgICB9LCBlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["allocation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"allocation.vue","sourceRoot":"src/components/portfolio","sourcesContent":["<template>\n  <div id=\"assets\">\n    <b-row>\n      <h1>{{ title }}</h1>\n    </b-row>\n    <b-row>\n      <b-form>\n        <b-button size=\"sm\" variant=\"success\" @click=\"allocateAssets\">Allocate Assets</b-button>\n        <b-button size=\"sm\" variant=\"danger\" @click=\"terminateAllocation\">Terminate Allocation</b-button>\n        <b-badge pill variant=\"primary\">{{ status }}</b-badge>\n      </b-form>\n    </b-row>\n    <b-row>\n      <b-col cols=\"6\">\n        <b-container fluid>\n          <b-row>\n            <b-col sm=\"6\">\n              <label for=\"input-std\">Maximum Standard Deviation:</label>\n            </b-col>\n            <b-col sm=\"3\">\n              <b-input-group size=\"sm\" append=\"%\">\n                <b-form-input id=\"input-std\" v-model.trim=\"parametrization\" @change=\"parametrizationChange\" type=\"number\" :disabled=\"solving\"/>\n              </b-input-group>\n            </b-col>\n          </b-row>\n        </b-container>\n        <b-table striped hover :items=\"allocations\" :fields=\"tableFields\"/>\n        <p>\n          Expected Return: <b>{{ (portfolio || {}).expectedReturnLabel }}</b>,\n          Standard Deviation Risk: <b>{{ (portfolio || {}).standardDeviationLabel }}</b>\n        </p>\n      </b-col>\n      <b-col cols=\"6\">\n          <allocation-chart :chart-data=\"chartAllocations\"/>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport Rainbow from 'color-rainbow'\nimport axios from 'axios'\nimport AllocationChart from '@/components/portfolio/chart.vue'\n\nexport default {\n  name: 'allocation',\n  props: ['title', 'portfolio', 'status'],\n  components: {\n    'allocation-chart': AllocationChart\n  },\n  data () {\n    return {\n      tableFields: ['asset', 'expectedReturn', 'standardDeviation', 'quantityLabel']\n    }\n  },\n  computed: {\n    solving () {\n      return this.status === 'SOLVING_ACTIVE'\n    },\n    parametrization: {\n      set (newVal) {\n        this.portfolio.parametrization.standardDeviationMaximumLabel = `${newVal}%`\n        this.portfolio.parametrization.standardDeviationMillisMaximum = newVal * 10\n      },\n      get () {\n        return (((this.portfolio || {}).parametrization || {}).standardDeviationMillisMaximum || 0) / 10\n      }\n    },\n    allocations () {\n      const assetsList = this.portfolio ? this.portfolio.assetClassList : []\n      const assetsId = (assetsList || []).reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n\n      return (this.portfolio.assetClassAllocationList || []).map(e => ({\n        asset: assetsId[e.assetClassId].name,\n        expectedReturn: assetsId[e.assetClassId].expectedReturnLabel,\n        standardDeviation: assetsId[e.assetClassId].standardDeviationRiskLabel,\n        quantityMillis: e.quantityMillis,\n        quantityLabel: e.quantityLabel}))\n    },\n    chartAllocations () {\n      const colors = Rainbow.create(this.allocations.length).map(c => `rgb(${c.values.rgb.join(', ')})`)\n      return {\n        labels: this.allocations.map(e => e.asset),\n        datasets: [{\n          backgroundColor: colors,\n          data: this.allocations.map(e => e.quantityMillis)\n        }]\n      }\n    }\n  },\n  methods: {\n    parametrizationChange () {\n      const aux = parseFloat(this.parametrization)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.parametrization = qty\n    },\n    allocateAssets () {\n      const url = `/api/portfolio/${this.portfolio.id}/async-allocate`\n      axios.post(url, this.portfolio)\n      .then(res => {\n        this.$emit('newStatus', res.data)\n        console.log(res.data)\n      }, error => {\n        console.error(error)\n      })\n    },\n    terminateAllocation () {\n      const url = `/api/portfolio/${this.portfolio.id}/terminate`\n      axios.get(url)\n      .then(res => {\n        console.log(res.data)\n      }, error => {\n        console.error(error)\n      })\n    }\n  }\n}\n</script>\n"]}]}