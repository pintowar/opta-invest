{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue","mtime":1597016519791},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/thread-loader/dist/cjs.js","mtime":1589656986772},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/babel-loader/lib/index.js","mtime":1597018266734},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597018277682}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'assets',\n  props: ['title', 'portfolio', 'status'],\n  data () {\n    return {\n      fields: ['id', 'name', 'quantity']\n    }\n  },\n  computed: {\n    solving () {\n      return this.status === 'SOLVING'\n    },\n    regions () {\n      return (this.portfolio ? this.portfolio.regionList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    sectors () {\n      return (this.portfolio ? this.portfolio.sectorList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    assets () {\n      const regionsId = this.regions.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n      const sectorsId = this.sectors.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n\n      const assetsList = this.portfolio ? this.portfolio.assetClassList || [] : []\n      return assetsList.map(e => ({\n        id: e.id,\n        name: e.name,\n        region: regionsId[e.regionId].name,\n        sector: sectorsId[e.sectorId].name,\n        expectedReturnLabel: e.expectedReturnLabel,\n        standardDeviationRiskLabel: e.standardDeviationRiskLabel}))\n    }\n  },\n  methods: {\n    regionChange (idx) {\n      const aux = parseFloat(this.regions[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.regionList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.regionList[idx].quantityMaximumLabel = `${qty}%`\n    },\n    sectorChange (idx) {\n      const aux = parseFloat(this.sectors[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.sectorList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.sectorList[idx].quantityMaximumLabel = `${qty}%`\n    }\n  }\n}\n",{"version":3,"sources":["assets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"assets.vue","sourceRoot":"src/components/portfolio","sourcesContent":["<template>\n  <div id=\"assets\">\n    <b-row>\n      <h1>{{ title }}</h1>\n    </b-row>\n    <b-row>\n      <b-col cols=\"6\">\n        <b-table striped hover :items=\"regions\" :fields=\"fields\">\n          <template slot=\"quantity\" slot-scope=\"row\">\n            <b-input-group size=\"sm\" append=\"%\">\n              <b-form-input id=\"region-std\" v-model.number=\"row.item.quantity\" type=\"number\" @change=\"regionChange(row.index)\" :disabled=\"solving\"/>\n            </b-input-group>\n          </template>\n        </b-table>\n      </b-col>\n      <b-col cols=\"6\">\n        <b-table striped hover :items=\"sectors\" :fields=\"fields\">\n          <template slot=\"quantity\" slot-scope=\"row\">\n            <b-input-group size=\"sm\" append=\"%\">\n              <b-form-input id=\"sector-std\" v-model.trim=\"row.item.quantity\" type=\"number\" @change=\"sectorChange(row.index)\" :disabled=\"solving\"/>\n            </b-input-group>\n          </template>\n        </b-table>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-table striped hover :items=\"assets\"></b-table>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'assets',\n  props: ['title', 'portfolio', 'status'],\n  data () {\n    return {\n      fields: ['id', 'name', 'quantity']\n    }\n  },\n  computed: {\n    solving () {\n      return this.status === 'SOLVING'\n    },\n    regions () {\n      return (this.portfolio ? this.portfolio.regionList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    sectors () {\n      return (this.portfolio ? this.portfolio.sectorList || [] : []).map(e => { e.quantity = e.quantityMillisMaximum / 10; return e })\n    },\n    assets () {\n      const regionsId = this.regions.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n      const sectorsId = this.sectors.reduce((acc, e) => { acc[e.id] = e; return acc }, {})\n\n      const assetsList = this.portfolio ? this.portfolio.assetClassList || [] : []\n      return assetsList.map(e => ({\n        id: e.id,\n        name: e.name,\n        region: regionsId[e.regionId].name,\n        sector: sectorsId[e.sectorId].name,\n        expectedReturnLabel: e.expectedReturnLabel,\n        standardDeviationRiskLabel: e.standardDeviationRiskLabel}))\n    }\n  },\n  methods: {\n    regionChange (idx) {\n      const aux = parseFloat(this.regions[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.regionList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.regionList[idx].quantityMaximumLabel = `${qty}%`\n    },\n    sectorChange (idx) {\n      const aux = parseFloat(this.sectors[idx].quantity)\n      const qty = Math.max(Math.min(isNaN(aux) ? 0.0 : aux, 100.0), 0.0)\n      this.portfolio.sectorList[idx].quantityMillisMaximum = qty * 10\n      this.portfolio.sectorList[idx].quantityMaximumLabel = `${qty}%`\n    }\n  }\n}\n</script>"]}]}