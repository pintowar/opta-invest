{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/pages/portfolio/show.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/pages/portfolio/show.vue","mtime":1597016519791},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/thread-loader/dist/cjs.js","mtime":1589656986772},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/babel-loader/lib/index.js","mtime":1597018266734},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597018277682}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport CorrMatrix from '@/components/portfolio/matrix.vue'\nimport Assets from '@/components/portfolio/assets.vue'\nimport Allocation from '@/components/portfolio/allocation.vue'\n\nexport default {\n  name: 'portfolio',\n  data () {\n    return {\n      title: 'Portfolio ' + this.$route.params.id,\n      portfolio: {},\n      status: 'NONE'\n    }\n  },\n  components: {\n    'corr-matrix': CorrMatrix,\n    'assets': Assets,\n    'allocation': Allocation\n  },\n  created () {\n    this.portfolioId = Number(this.$route.params.id)\n\n    const socket = new SockJS('/stomp')\n    this.client = Stomp.over(socket)\n    this.client.debug = null\n    let self = this\n    this.client.connect({}, frame => {\n      console.log('Connected: ' + frame)\n      self.client.subscribe('/topic/solution', message => {\n        const data = JSON.parse(message.body)\n        // console.log(data.status)\n        if (data.id === this.portfolioId) {\n          self.status = data.status\n          self.portfolio = data.portfolio\n        }\n      })\n    })\n\n    axios.get(`/api/portfolio/${this.portfolioId}`).then(res => {\n      this.status = res.data.status\n      this.portfolio = res.data.investment\n      this.title = `Portfolio ${this.portfolio.name}`\n    }, error => {\n      console.error(error)\n    })\n  },\n  beforeDestroy () {\n    this.client.disconnect()\n  },\n  methods: {\n    changeStatus (newStatus) {\n      this.status = newStatus\n    }\n  }\n}\n",{"version":3,"sources":["show.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"show.vue","sourceRoot":"src/pages/portfolio","sourcesContent":["<template>\n  <b-card no-body>\n    <b-tabs card>\n      <b-tab title=\"Allocation\" active>\n        <allocation :title=\"title\" :portfolio=\"portfolio\" :status=\"status\" @newStatus=\"changeStatus\" />\n      </b-tab>\n      <b-tab title=\"Info\">\n        <assets :title=\"title\" :portfolio=\"portfolio\" :status=\"status\" />\n      </b-tab>\n      <b-tab title=\"Correlation Matrix\">\n        <corr-matrix :title=\"title\" :portfolio=\"portfolio\" />\n      </b-tab>\n    </b-tabs>\n  </b-card>\n</template>\n\n<script>\nimport axios from 'axios'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport CorrMatrix from '@/components/portfolio/matrix.vue'\nimport Assets from '@/components/portfolio/assets.vue'\nimport Allocation from '@/components/portfolio/allocation.vue'\n\nexport default {\n  name: 'portfolio',\n  data () {\n    return {\n      title: 'Portfolio ' + this.$route.params.id,\n      portfolio: {},\n      status: 'NONE'\n    }\n  },\n  components: {\n    'corr-matrix': CorrMatrix,\n    'assets': Assets,\n    'allocation': Allocation\n  },\n  created () {\n    this.portfolioId = Number(this.$route.params.id)\n\n    const socket = new SockJS('/stomp')\n    this.client = Stomp.over(socket)\n    this.client.debug = null\n    let self = this\n    this.client.connect({}, frame => {\n      console.log('Connected: ' + frame)\n      self.client.subscribe('/topic/solution', message => {\n        const data = JSON.parse(message.body)\n        // console.log(data.status)\n        if (data.id === this.portfolioId) {\n          self.status = data.status\n          self.portfolio = data.portfolio\n        }\n      })\n    })\n\n    axios.get(`/api/portfolio/${this.portfolioId}`).then(res => {\n      this.status = res.data.status\n      this.portfolio = res.data.investment\n      this.title = `Portfolio ${this.portfolio.name}`\n    }, error => {\n      console.error(error)\n    })\n  },\n  beforeDestroy () {\n    this.client.disconnect()\n  },\n  methods: {\n    changeStatus (newStatus) {\n      this.status = newStatus\n    }\n  }\n}\n</script>\n"]}]}