{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue?vue&type=template&id=dfc4058c&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/assets.vue","mtime":1597016519791},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597018277682},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597018277682}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"assets\" } },\n    [\n      _c(\"b-row\", [_c(\"h1\", [_vm._v(_vm._s(_vm.title))])]),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { cols: \"6\" } },\n            [\n              _c(\"b-table\", {\n                attrs: {\n                  striped: \"\",\n                  hover: \"\",\n                  items: _vm.regions,\n                  fields: _vm.fields\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"quantity\",\n                    fn: function(row) {\n                      return [\n                        _c(\n                          \"b-input-group\",\n                          { attrs: { size: \"sm\", append: \"%\" } },\n                          [\n                            _c(\"b-form-input\", {\n                              attrs: {\n                                id: \"region-std\",\n                                type: \"number\",\n                                disabled: _vm.solving\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.regionChange(row.index)\n                                }\n                              },\n                              model: {\n                                value: row.item.quantity,\n                                callback: function($$v) {\n                                  _vm.$set(row.item, \"quantity\", _vm._n($$v))\n                                },\n                                expression: \"row.item.quantity\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { cols: \"6\" } },\n            [\n              _c(\"b-table\", {\n                attrs: {\n                  striped: \"\",\n                  hover: \"\",\n                  items: _vm.sectors,\n                  fields: _vm.fields\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"quantity\",\n                    fn: function(row) {\n                      return [\n                        _c(\n                          \"b-input-group\",\n                          { attrs: { size: \"sm\", append: \"%\" } },\n                          [\n                            _c(\"b-form-input\", {\n                              attrs: {\n                                id: \"sector-std\",\n                                type: \"number\",\n                                disabled: _vm.solving\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.sectorChange(row.index)\n                                }\n                              },\n                              model: {\n                                value: row.item.quantity,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    row.item,\n                                    \"quantity\",\n                                    typeof $$v === \"string\" ? $$v.trim() : $$v\n                                  )\n                                },\n                                expression: \"row.item.quantity\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            [\n              _c(\"b-table\", {\n                attrs: { striped: \"\", hover: \"\", items: _vm.assets }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}