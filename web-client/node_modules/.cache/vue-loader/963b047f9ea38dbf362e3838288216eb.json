{"remainingRequest":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/allocation.vue?vue&type=template&id=48107c97&","dependencies":[{"path":"/home/thiago/Projects/code/opta-invest/client/src/components/portfolio/allocation.vue","mtime":1597016519791},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597018277682},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/cache-loader/dist/cjs.js","mtime":1597018277274},{"path":"/home/thiago/Projects/code/opta-invest/client/node_modules/vue-loader/lib/index.js","mtime":1597018277682}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"assets\" } },\n    [\n      _c(\"b-row\", [_c(\"h1\", [_vm._v(_vm._s(_vm.title))])]),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-form\",\n            [\n              _c(\n                \"b-button\",\n                {\n                  attrs: { size: \"sm\", variant: \"success\" },\n                  on: { click: _vm.allocateAssets }\n                },\n                [_vm._v(\"Allocate Assets\")]\n              ),\n              _c(\n                \"b-button\",\n                {\n                  attrs: { size: \"sm\", variant: \"danger\" },\n                  on: { click: _vm.terminateAllocation }\n                },\n                [_vm._v(\"Terminate Allocation\")]\n              ),\n              _c(\"b-badge\", { attrs: { pill: \"\", variant: \"primary\" } }, [\n                _vm._v(_vm._s(_vm.status))\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { cols: \"6\" } },\n            [\n              _c(\n                \"b-container\",\n                { attrs: { fluid: \"\" } },\n                [\n                  _c(\n                    \"b-row\",\n                    [\n                      _c(\"b-col\", { attrs: { sm: \"6\" } }, [\n                        _c(\"label\", { attrs: { for: \"input-std\" } }, [\n                          _vm._v(\"Maximum Standard Deviation:\")\n                        ])\n                      ]),\n                      _c(\n                        \"b-col\",\n                        { attrs: { sm: \"3\" } },\n                        [\n                          _c(\n                            \"b-input-group\",\n                            { attrs: { size: \"sm\", append: \"%\" } },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"input-std\",\n                                  type: \"number\",\n                                  disabled: _vm.solving\n                                },\n                                on: { change: _vm.parametrizationChange },\n                                model: {\n                                  value: _vm.parametrization,\n                                  callback: function($$v) {\n                                    _vm.parametrization =\n                                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                                  },\n                                  expression: \"parametrization\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"b-table\", {\n                attrs: {\n                  striped: \"\",\n                  hover: \"\",\n                  items: _vm.allocations,\n                  fields: _vm.tableFields\n                }\n              }),\n              _c(\"p\", [\n                _vm._v(\"\\n        Expected Return: \"),\n                _c(\"b\", [\n                  _vm._v(_vm._s((_vm.portfolio || {}).expectedReturnLabel))\n                ]),\n                _vm._v(\",\\n        Standard Deviation Risk: \"),\n                _c(\"b\", [\n                  _vm._v(_vm._s((_vm.portfolio || {}).standardDeviationLabel))\n                ])\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-col\",\n            { attrs: { cols: \"6\" } },\n            [\n              _c(\"allocation-chart\", {\n                attrs: { \"chart-data\": _vm.chartAllocations }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}